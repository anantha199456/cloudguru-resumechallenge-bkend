name: Upload Website file Changes

on:
  push:
    branches:
    - main

jobs:
  check:
    name: Check Changes in Website Files
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    runs-on: ubuntu-latest
    steps:
            # Step 4: Checkout
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      # Step 1: Setup Pyton
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      # Step 2: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install GitPython
          pip install awscli
      # Step 3: Run python script
      - name: Check if website file has changed
        id: check_files
        #working-directory: .github/scripts
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file = website/* ]]; then
              echo "This modified file is under the 'website' folder."
              echo "::set-output name=run_job::true"
              break
            else
              echo "::set-output name=run_job::false"
            fi
          done < files.txt

  # Job 2: Upload File to S3 Secure
  deploy:
    name: Upload File to S3 WWW
    needs: check
    if: needs.check.outputs.run_job == 'true'
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository code 
    - name: Checkout Code 
      uses: actions/checkout@master
      # Step 2: Upload Files to S3
    - uses: anhlead/s3-sync-action-clone@master
      with:
        args: --acl public-read --follow-symlinks --delete 
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_WWW }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-east-1'   # optional: defaults to us-east-1
        SOURCE_DIR: 'website'      # optional: defaults to entire repository
    - name: Invalidate CloudFront
      run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_SECRET_DISTRIBUTION_ID_WWW }} --paths "/"
          